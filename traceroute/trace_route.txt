goals:
- this was supposed to be an easier project i wanted to learn about building an executable, which was not super cool but still

things i know:
- i want to do this in rust and try out network programming in a different language. this one is just sending out packets on udp, and then measuring for the icmp time packet to determine the host which sent that packet.
- you want to keep increasing the ttl until it reaches the destination.
- one port for sending packets + one port for receiving the icmp response.

things i learned:
- icmp message stands for internet control message protocol, mainly used for errors/diagnostics.
- time exceeded (type 11) – used in traceroute to track the path of packets. code 0: ttl (time-to-live) expired in transit.

random but might use in future projects:
- echo request & echo reply (type 8 & 0) – used by the ping command to check if a host is reachable.
- timestamp request & reply (type 13 & 14) – used to synchronize clocks between systems. might use in the ntp implementation?

traceroute was relatively easy to implement in about 30-60 minutes, but of course lots of interesting concepts at play.
- using ttl and the built-in function to resolve the hostname into an ip address was cool, especially since i already implemented that by hand last time.
- also learned about building a python executable and how to create custom commands ("ctraceroute" in my case).
    - chmod +x ctraceroute.py, mv ctraceroute.py ctraceroute, add ctraceroute to PATH, works temporarily

jk ended up doing it in python, i didnt want to be spreading myself too thin across different languages.